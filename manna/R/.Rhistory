PATH = '../output/'
TIMEBIN = 10
OutFiles = list.files(path=PATH)
TemporalBeta = NULL
TemporalDynamics = NULL
## Step 0: Define some helper functions
getParFromId = function(id){
SimId = strsplit(id,'.txt')[[1]]
SimPar = strsplit(SimId,'-')[[1]]
SimParValues = unlist(lapply(SimPar,as.numeric))
names(SimParValues) = c('id','niche','migrants','Nco','Nsp','assembly')
return(SimParValues)
}
NeutralMetaWebs = list()
TraitsMetaWebs = list()
## Step 1: Read the files
for(CurrentFile in OutFiles){
cat(paste('Processing file ',CurrentFile,'\n',sep=''))
CurrentData = read.table(paste(PATH,CurrentFile,sep=''))
colnames(CurrentData) = c('id','niche','time','s1','s2','p1','p2','n1','n2','k1','k2')
# Prepare a list of webs
CurrentWebs = list()
# Aggregate the simul results by bins of time
MinTime = min(CurrentData$time)
MaxTime = max(CurrentData$time)+TIMEBIN
TimeSeq = seq(from=MinTime,to=MaxTime,by=TIMEBIN)
cat(paste('\tGetting the networks\n',sep=''))
for(BinStart in c(1:(length(TimeSeq)-2))){
BinStop = BinStart + 1
TStart = TimeSeq[BinStart]
TStop = TimeSeq[BinStop]
CurrentTime = TStop - TIMEBIN/2
#cat(paste('\tGetting the network around time ',CurrentTime,'\n',sep=''))
CurrentBinnedData = subset(CurrentData,(CurrentData$time>=TStart)&(CurrentData$time<TStop))
CurrentWeb = xtabs(~s1+s2,data=CurrentBinnedData)
CurrentWeb[CurrentWeb>0]=1
CurrentWebs[[as.character(CurrentTime)]] = CurrentWeb
nSp = length(unique(c(colnames(CurrentWeb),rownames(CurrentWeb))))
nLi = sum(CurrentWeb)
TemporalDynamics = rbind(TemporalDynamics,c(getParFromId(CurrentFile),t=CurrentTime,sp=nSp,li=nLi,co=nLi/(nSp^2)))
}
if(getParFromId(CurrentFile)['niche']==0){
NeutralMetaWebs[[length(NeutralMetaWebs)+1]] = aggregate.metaweb(CurrentWebs)$web
} else {
TraitsMetaWebs[[length(TraitsMetaWebs)+1]] = aggregate.metaweb(CurrentWebs)$web
}
# Get the temporal beta-diversity
cat(paste('\tRunning the beta-div analysis\n',sep=''))
for(w1idx in c(1:(length(CurrentWebs)-1))){
w1 = CurrentWebs[[w1idx]]
w2 = CurrentWebs[[w1idx+1]]
B = unlist(betalink(w1, w2))
TemporalBeta = rbind(TemporalBeta,c(getParFromId(CurrentFile),t=as.numeric(names(CurrentWebs)[w1idx+1])-TIMEBIN/2,B))
}
}
par(mfcol=c(1,2))
boxplot(betalink.dist(TraitsMetaWebs),ylim=c(0,1),main='Trait-based',lty=1,pch=20)
boxplot(betalink.dist(NeutralMetaWebs),ylim=c(0,1),main='Neutral',lty=1,pch=20)
library(betalink)
library(ggplot2)
PATH = '../output/'
TIMEBIN = 10
OutFiles = list.files(path=PATH)
TemporalBeta = NULL
TemporalDynamics = NULL
## Step 0: Define some helper functions
getParFromId = function(id){
SimId = strsplit(id,'.txt')[[1]]
SimPar = strsplit(SimId,'-')[[1]]
SimParValues = unlist(lapply(SimPar,as.numeric))
names(SimParValues) = c('id','niche','migrants','Nco','Nsp','assembly')
return(SimParValues)
}
NeutralMetaWebs = list()
TraitsMetaWebs = list()
## Step 1: Read the files
for(CurrentFile in OutFiles){
cat(paste('Processing file ',CurrentFile,'\n',sep=''))
CurrentData = read.table(paste(PATH,CurrentFile,sep=''))
colnames(CurrentData) = c('id','niche','time','s1','s2','p1','p2','n1','n2','k1','k2')
# Prepare a list of webs
CurrentWebs = list()
# Aggregate the simul results by bins of time
MinTime = min(CurrentData$time)
MaxTime = max(CurrentData$time)+TIMEBIN
TimeSeq = seq(from=MinTime,to=MaxTime,by=TIMEBIN)
cat(paste('\tGetting the networks\n',sep=''))
for(BinStart in c(1:(length(TimeSeq)-2))){
BinStop = BinStart + 1
TStart = TimeSeq[BinStart]
TStop = TimeSeq[BinStop]
CurrentTime = TStop - TIMEBIN/2
#cat(paste('\tGetting the network around time ',CurrentTime,'\n',sep=''))
CurrentBinnedData = subset(CurrentData,(CurrentData$time>=TStart)&(CurrentData$time<TStop))
CurrentWeb = xtabs(~s1+s2,data=CurrentBinnedData)
CurrentWeb[CurrentWeb>0]=1
CurrentWebs[[as.character(CurrentTime)]] = CurrentWeb
nSp = length(unique(c(colnames(CurrentWeb),rownames(CurrentWeb))))
nLi = sum(CurrentWeb)
TemporalDynamics = rbind(TemporalDynamics,c(getParFromId(CurrentFile),t=CurrentTime,sp=nSp,li=nLi,co=nLi/(nSp^2)))
}
if(getParFromId(CurrentFile)['niche']==0){
NeutralMetaWebs[[length(NeutralMetaWebs)+1]] = aggregate.metaweb(CurrentWebs)$web
} else {
TraitsMetaWebs[[length(TraitsMetaWebs)+1]] = aggregate.metaweb(CurrentWebs)$web
}
# Get the temporal beta-diversity
cat(paste('\tRunning the beta-div analysis\n',sep=''))
for(w1idx in c(1:(length(CurrentWebs)-1))){
w1 = CurrentWebs[[w1idx]]
w2 = CurrentWebs[[w1idx+1]]
B = unlist(betalink(w1, w2))
TemporalBeta = rbind(TemporalBeta,c(getParFromId(CurrentFile),t=as.numeric(names(CurrentWebs)[w1idx+1])-TIMEBIN/2,B))
}
}
par(mfcol=c(1,2))
boxplot(betalink.dist(TraitsMetaWebs),ylim=c(0,1),main='Trait-based',lty=1,pch=20)
boxplot(betalink.dist(NeutralMetaWebs),ylim=c(0,1),main='Neutral',lty=1,pch=20)
library(betalink)
library(ggplot2)
PATH = '../output/'
TIMEBIN = 10
OutFiles = list.files(path=PATH)
TemporalBeta = NULL
TemporalDynamics = NULL
## Step 0: Define some helper functions
getParFromId = function(id){
SimId = strsplit(id,'.txt')[[1]]
SimPar = strsplit(SimId,'-')[[1]]
SimParValues = unlist(lapply(SimPar,as.numeric))
names(SimParValues) = c('id','niche','migrants','Nco','Nsp','assembly')
return(SimParValues)
}
NeutralMetaWebs = list()
TraitsMetaWebs = list()
## Step 1: Read the files
for(CurrentFile in OutFiles){
cat(paste('Processing file ',CurrentFile,'\n',sep=''))
CurrentData = read.table(paste(PATH,CurrentFile,sep=''))
colnames(CurrentData) = c('id','niche','time','s1','s2','p1','p2','n1','n2','k1','k2')
# Prepare a list of webs
CurrentWebs = list()
# Aggregate the simul results by bins of time
MinTime = min(CurrentData$time)
MaxTime = max(CurrentData$time)+TIMEBIN
TimeSeq = seq(from=MinTime,to=MaxTime,by=TIMEBIN)
cat(paste('\tGetting the networks\n',sep=''))
for(BinStart in c(1:(length(TimeSeq)-2))){
BinStop = BinStart + 1
TStart = TimeSeq[BinStart]
TStop = TimeSeq[BinStop]
CurrentTime = TStop - TIMEBIN/2
#cat(paste('\tGetting the network around time ',CurrentTime,'\n',sep=''))
CurrentBinnedData = subset(CurrentData,(CurrentData$time>=TStart)&(CurrentData$time<TStop))
CurrentWeb = xtabs(~s1+s2,data=CurrentBinnedData)
CurrentWeb[CurrentWeb>0]=1
CurrentWebs[[as.character(CurrentTime)]] = CurrentWeb
nSp = length(unique(c(colnames(CurrentWeb),rownames(CurrentWeb))))
nLi = sum(CurrentWeb)
TemporalDynamics = rbind(TemporalDynamics,c(getParFromId(CurrentFile),t=CurrentTime,sp=nSp,li=nLi,co=nLi/(nSp^2)))
}
if(getParFromId(CurrentFile)['niche']==0){
NeutralMetaWebs[[length(NeutralMetaWebs)+1]] = aggregate.metaweb(CurrentWebs)$web
} else {
TraitsMetaWebs[[length(TraitsMetaWebs)+1]] = aggregate.metaweb(CurrentWebs)$web
}
# Get the temporal beta-diversity
cat(paste('\tRunning the beta-div analysis\n',sep=''))
for(w1idx in c(1:(length(CurrentWebs)-1))){
w1 = CurrentWebs[[w1idx]]
w2 = CurrentWebs[[w1idx+1]]
B = unlist(betalink(w1, w2))
TemporalBeta = rbind(TemporalBeta,c(getParFromId(CurrentFile),t=as.numeric(names(CurrentWebs)[w1idx+1])-TIMEBIN/2,B))
}
}
par(mfcol=c(1,2))
boxplot(betalink.dist(TraitsMetaWebs),ylim=c(0,1),main='Trait-based',lty=1,pch=20)
boxplot(betalink.dist(NeutralMetaWebs),ylim=c(0,1),main='Neutral',lty=1,pch=20)
library(betalink)
library(ggplot2)
PATH = '../output/'
TIMEBIN = 10
OutFiles = list.files(path=PATH)
TemporalBeta = NULL
TemporalDynamics = NULL
## Step 0: Define some helper functions
getParFromId = function(id){
SimId = strsplit(id,'.txt')[[1]]
SimPar = strsplit(SimId,'-')[[1]]
SimParValues = unlist(lapply(SimPar,as.numeric))
names(SimParValues) = c('id','niche','migrants','Nco','Nsp','assembly')
return(SimParValues)
}
NeutralMetaWebs = list()
TraitsMetaWebs = list()
## Step 1: Read the files
for(CurrentFile in OutFiles){
cat(paste('Processing file ',CurrentFile,'\n',sep=''))
CurrentData = read.table(paste(PATH,CurrentFile,sep=''))
colnames(CurrentData) = c('id','niche','time','s1','s2','p1','p2','n1','n2','k1','k2')
# Prepare a list of webs
CurrentWebs = list()
# Aggregate the simul results by bins of time
MinTime = min(CurrentData$time)
MaxTime = max(CurrentData$time)+TIMEBIN
TimeSeq = seq(from=MinTime,to=MaxTime,by=TIMEBIN)
cat(paste('\tGetting the networks\n',sep=''))
for(BinStart in c(1:(length(TimeSeq)-2))){
BinStop = BinStart + 1
TStart = TimeSeq[BinStart]
TStop = TimeSeq[BinStop]
CurrentTime = TStop - TIMEBIN/2
#cat(paste('\tGetting the network around time ',CurrentTime,'\n',sep=''))
CurrentBinnedData = subset(CurrentData,(CurrentData$time>=TStart)&(CurrentData$time<TStop))
CurrentWeb = xtabs(~s1+s2,data=CurrentBinnedData)
CurrentWeb[CurrentWeb>0]=1
CurrentWebs[[as.character(CurrentTime)]] = CurrentWeb
nSp = length(unique(c(colnames(CurrentWeb),rownames(CurrentWeb))))
nLi = sum(CurrentWeb)
TemporalDynamics = rbind(TemporalDynamics,c(getParFromId(CurrentFile),t=CurrentTime,sp=nSp,li=nLi,co=nLi/(nSp^2)))
}
if(getParFromId(CurrentFile)['niche']==0){
NeutralMetaWebs[[length(NeutralMetaWebs)+1]] = aggregate.metaweb(CurrentWebs)$web
} else {
TraitsMetaWebs[[length(TraitsMetaWebs)+1]] = aggregate.metaweb(CurrentWebs)$web
}
# Get the temporal beta-diversity
cat(paste('\tRunning the beta-div analysis\n',sep=''))
for(w1idx in c(1:(length(CurrentWebs)-1))){
w1 = CurrentWebs[[w1idx]]
w2 = CurrentWebs[[w1idx+1]]
B = unlist(betalink(w1, w2))
TemporalBeta = rbind(TemporalBeta,c(getParFromId(CurrentFile),t=as.numeric(names(CurrentWebs)[w1idx+1])-TIMEBIN/2,B))
}
}
par(mfcol=c(1,2))
boxplot(betalink.dist(TraitsMetaWebs),ylim=c(0,1),main='Trait-based',lty=1,pch=20)
boxplot(betalink.dist(NeutralMetaWebs),ylim=c(0,1),main='Neutral',lty=1,pch=20)
?boxplot
list(NeutralMetaWebs,TraitsMetaWebs)
betalink.dist(list(NeutralMetaWebs,TraitsMetaWebs))
par(mfcol=c(1,2),pch=20)
boxplot(betalink.dist(TraitsMetaWebs),ylim=c(0,1),main='Trait-based',lty=1)
boxplot(betalink.dist(NeutralMetaWebs),ylim=c(0,1),main='Neutral',lty=1)
plot(hclust(betalink.dist(TraitsMetaWebs)$OS))
plot(hclust(betalink.dist(NeutralMetaWebs)$OS))
boxplot(lapply(TraitsMetaWebs,Conn),ylim=c(0,1),main='Trait-based',lty=1)
Conn = function(x) sum(x)/length(unique(c(rownames(x),colnames(x))))^2
boxplot(lapply(TraitsMetaWebs,Conn),ylim=c(0,1),main='Trait-based',lty=1)
hist(lapply(TraitsMetaWebs,Conn),ylim=c(0,1),main='Trait-based',lty=1)
hist(unlist(lapply(TraitsMetaWebs,Conn)),ylim=c(0,1),main='Trait-based',lty=1)
hist(unlist(lapply(TraitsMetaWebs,Conn)),main='Trait-based',lty=1)
hist(unlist(lapply(NeutralMetaWebs,Conn)),main='Trait-based',lty=1)
hist(unlist(lapply(TraitsMetaWebs,Conn)),main='Trait-based',lty=1,xlimc=(0.02,0.2))
hist(unlist(lapply(TraitsMetaWebs,Conn)),main='Trait-based',lty=1,xlim=(0.02,0.2))
hist(unlist(lapply(TraitsMetaWebs,Conn)),main='Trait-based',lty=1,xlim=c(0.02,0.2))
hist(unlist(lapply(NeutralMetaWebs,Conn)),main='Trait-based',lty=1,xlim=c(0.02,0.2))
hist(unlist(lapply(TraitsMetaWebs,Conn)),main='Trait-based',lty=1,xlim=c(0.02,0.16))
hist(unlist(lapply(NeutralMetaWebs,Conn)),main='Trait-based',lty=1,xlim=c(0.02,0.16))
pdf(file='betaPOP.pdf',width=12)
par(mfcol=c(1,2),pch=20)
boxplot(betalink.dist(TraitsMetaWebs),ylim=c(0,1),main='Trait-based',lty=1)
boxplot(betalink.dist(NeutralMetaWebs),ylim=c(0,1),main='Neutral',lty=1)
dev.off()
plot(BLT$S,BLT$WN)
BLT = betalink.dist(TraitsMetaWebs)
BLB = betalink.dist(NeutralMetaWebs)
plot(BLT$S,BLT$WN,col='skyblue')
plot(BLT$S,BLT$OS,col='darkgreen')
plot(BLT$S,BLT$OS,col='contrib')
plot(BLT$S,BLT$contrib,col='darkgreen')
plot(BLT$S,BLT$contrib,col='darkgreen')
BLN = betalink.dist(NeutralMetaWebs)
plot(BLN$S,BLN$contrib,col='darkgreen')
plot(BLT$S,BLT$WN,col='darkgreen')
plot(BLN$S,BLN$WN,col='darkgreen')
plot(BLT$S,BLT$OS,col='darkgreen')
plot(BLN$S,BLN$OS,col='darkgreen')
beta.os_prime
hist(beta.os_prime(TraitsMetaWebs))
hist(beta.os_prime(NeutralMetaWebs))
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1))
par(mfcol=c(2,2),pch=20)
boxplot(BLT,ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLB,ylim=c(0,1),main='Neutral',lty=1)
par(mfrow=c(2,2),pch=20)
boxplot(BLT,ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLB,ylim=c(0,1),main='Neutral',lty=1)
par(mfrow=c(2,2),pch=20)
boxplot(BLT,ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLB,ylim=c(0,1),main='Neutral',lty=1)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1))
hist(beta.os_prime(NeutralMetaWebs),xlim=c(0,1))
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),main='')
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),main='',box)
pdf(file='betaPOP.pdf',width=12,height=12,xaxt='i')
par(mfrow=c(2,2),pch=20,xaxt='i')
boxplot(BLT,ylim=c(0,1),main='Trait-based',lty=1)
par(mfrow=c(2,2),pch=20,xaxs='i')
boxplot(BLT,ylim=c(0,1),main='Trait-based',lty=1)
par(mfrow=c(2,2),pch=20,xaxs='i',yaxs='i')
boxplot(BLT,ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLB,ylim=c(0,1),main='Neutral',lty=1)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),main='')
hist(beta.os_prime(NeutralMetaWebs),xlim=c(0,1),main='')
box()
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,9),main='')
box()
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,10),main='')
box()
hist(beta.os_prime(NeutralMetaWebs),xlim=c(0,1),ylim=c(0,10),main='')
box()
par(mfrow=c(2,2),pch=20,xaxs='i',yaxs='i')
boxplot(BLT,ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLB,ylim=c(0,1),main='Neutral',lty=1)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,10),main='')
box()
hist(beta.os_prime(NeutralMetaWebs),xlim=c(0,1),ylim=c(0,10),main='')
box()
pdf(file='betaPOP.pdf',width=12,height=12)
par(mfrow=c(2,2),pch=20,xaxs='i',yaxs='i')
boxplot(BLT,ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLB,ylim=c(0,1),main='Neutral',lty=1)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,10),main='',xlab='Dissimilarity with the metaweb')
box()
hist(beta.os_prime(NeutralMetaWebs),xlim=c(0,1),ylim=c(0,10),main='',xlab='Dissimilarity with the metaweb')
box()
dev.off()
library(betalink)
library(ggplot2)
PATH = '../output/'
TIMEBIN = 10
OutFiles = list.files(path=PATH)
TemporalBeta = NULL
TemporalDynamics = NULL
## Step 0: Define some helper functions
getParFromId = function(id){
SimId = strsplit(id,'.txt')[[1]]
SimPar = strsplit(SimId,'-')[[1]]
SimParValues = unlist(lapply(SimPar,as.numeric))
names(SimParValues) = c('id','niche','migrants','Nco','Nsp','assembly')
return(SimParValues)
}
NeutralMetaWebs = list()
TraitsMetaWebs = list()
## Step 1: Read the files
for(CurrentFile in OutFiles){
cat(paste('Processing file ',CurrentFile,'\n',sep=''))
CurrentData = read.table(paste(PATH,CurrentFile,sep=''))
colnames(CurrentData) = c('id','niche','time','s1','s2','p1','p2','n1','n2','k1','k2')
# Prepare a list of webs
CurrentWebs = list()
# Aggregate the simul results by bins of time
MinTime = min(CurrentData$time)
MaxTime = max(CurrentData$time)+TIMEBIN
TimeSeq = seq(from=MinTime,to=MaxTime,by=TIMEBIN)
cat(paste('\tGetting the networks\n',sep=''))
for(BinStart in c(1:(length(TimeSeq)-2))){
BinStop = BinStart + 1
TStart = TimeSeq[BinStart]
TStop = TimeSeq[BinStop]
CurrentTime = TStop - TIMEBIN/2
#cat(paste('\tGetting the network around time ',CurrentTime,'\n',sep=''))
CurrentBinnedData = subset(CurrentData,(CurrentData$time>=TStart)&(CurrentData$time<TStop))
CurrentWeb = xtabs(~s1+s2,data=CurrentBinnedData)
CurrentWeb[CurrentWeb>0]=1
CurrentWebs[[as.character(CurrentTime)]] = CurrentWeb
nSp = length(unique(c(colnames(CurrentWeb),rownames(CurrentWeb))))
nLi = sum(CurrentWeb)
TemporalDynamics = rbind(TemporalDynamics,c(getParFromId(CurrentFile),t=CurrentTime,sp=nSp,li=nLi,co=nLi/(nSp^2)))
}
if(getParFromId(CurrentFile)['niche']==0){
NeutralMetaWebs[[length(NeutralMetaWebs)+1]] = aggregate.metaweb(CurrentWebs)$web
} else {
TraitsMetaWebs[[length(TraitsMetaWebs)+1]] = aggregate.metaweb(CurrentWebs)$web
}
# Get the temporal beta-diversity
cat(paste('\tRunning the beta-div analysis\n',sep=''))
for(w1idx in c(1:(length(CurrentWebs)-1))){
w1 = CurrentWebs[[w1idx]]
w2 = CurrentWebs[[w1idx+1]]
B = unlist(betalink(w1, w2))
TemporalBeta = rbind(TemporalBeta,c(getParFromId(CurrentFile),t=as.numeric(names(CurrentWebs)[w1idx+1])-TIMEBIN/2,B))
}
}
Conn = function(x) sum(x)/length(unique(c(rownames(x),colnames(x))))^2
BLT = betalink.dist(TraitsMetaWebs)
BLN = betalink.dist(NeutralMetaWebs)
pdf(file='betaPOP.pdf',width=12,height=12)
par(mfrow=c(2,2),pch=20,xaxs='i',yaxs='i')
boxplot(BLT,ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLB,ylim=c(0,1),main='Neutral',lty=1)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,10),main='',xlab='Dissimilarity with the metaweb')
box()
hist(beta.os_prime(NeutralMetaWebs),xlim=c(0,1),ylim=c(0,10),main='',xlab='Dissimilarity with the metaweb')
box()
dev.off()
pdf(file='betaPOP.pdf',width=12,height=12)
par(mfrow=c(2,2),pch=20,xaxs='i',yaxs='i')
boxplot(BLT,ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLN,ylim=c(0,1),main='Neutral',lty=1)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,10),main='',xlab='Dissimilarity with the metaweb')
box()
hist(beta.os_prime(NeutralMetaWebs),xlim=c(0,1),ylim=c(0,10),main='',xlab='Dissimilarity with the metaweb')
box()
dev.off()
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,20),main='',xlab='Dissimilarity with the metaweb')
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,50),main='',xlab='Dissimilarity with the metaweb')
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,30),main='',xlab='Dissimilarity with the metaweb')
hist(beta.os_prime(NeutralMetaWebs),xlim=c(0,1),ylim=c(0,30),main='',xlab='Dissimilarity with the metaweb')
hist(beta.os_prime(NeutralMetaWebs),xlim=c(0,1),ylim=c(0,35),main='',xlab='Dissimilarity with the metaweb')
hist(beta.os_prime(NeutralMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb')
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb')
pdf(file='betaPOP.pdf',width=12,height=12)
par(mfrow=c(2,2),pch=20,xaxs='i',yaxs='i')
boxplot(BLT,ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLN,ylim=c(0,1),main='Neutral',lty=1)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb')
box()
hist(beta.os_prime(NeutralMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb')
box()
dev.off()
?hist
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb',breaks=10)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb',breaks=5)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb',breaks=6)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb',breaks=7)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb',breaks=8)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb')
BLT = betalink.dist(TraitsMetaWebs)[[c('WN','OS')]]
boxplot(BLT,ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLT[c('WN','OS')],ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLT[c('WN','OS','contrib')],ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLN[c('WN','OS','contrib')],ylim=c(0,1),main='Neutral',lty=1)
pdf(file='betaPOP.pdf',width=12,height=12)
par(mfrow=c(2,2),pch=20,xaxs='i',yaxs='i')
boxplot(BLT[c('WN','OS','contrib')],ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLN[c('WN','OS','contrib')],ylim=c(0,1),main='Neutral',lty=1)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb')
box()
hist(beta.os_prime(NeutralMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb')
box()
dev.off()
library(betalink)
library(ggplot2)
PATH = '../output/'
TIMEBIN = 10
OutFiles = list.files(path=PATH)
TemporalBeta = NULL
TemporalDynamics = NULL
## Step 0: Define some helper functions
getParFromId = function(id){
SimId = strsplit(id,'.txt')[[1]]
SimPar = strsplit(SimId,'-')[[1]]
SimParValues = unlist(lapply(SimPar,as.numeric))
names(SimParValues) = c('id','niche','migrants','Nco','Nsp','assembly')
return(SimParValues)
}
NeutralMetaWebs = list()
TraitsMetaWebs = list()
## Step 1: Read the files
for(CurrentFile in OutFiles){
cat(paste('Processing file ',CurrentFile,'\n',sep=''))
CurrentData = read.table(paste(PATH,CurrentFile,sep=''))
colnames(CurrentData) = c('id','niche','time','s1','s2','p1','p2','n1','n2','k1','k2')
# Prepare a list of webs
CurrentWebs = list()
# Aggregate the simul results by bins of time
MinTime = min(CurrentData$time)
MaxTime = max(CurrentData$time)+TIMEBIN
TimeSeq = seq(from=MinTime,to=MaxTime,by=TIMEBIN)
cat(paste('\tGetting the networks\n',sep=''))
for(BinStart in c(1:(length(TimeSeq)-2))){
BinStop = BinStart + 1
TStart = TimeSeq[BinStart]
TStop = TimeSeq[BinStop]
CurrentTime = TStop - TIMEBIN/2
#cat(paste('\tGetting the network around time ',CurrentTime,'\n',sep=''))
CurrentBinnedData = subset(CurrentData,(CurrentData$time>=TStart)&(CurrentData$time<TStop))
CurrentWeb = xtabs(~s1+s2,data=CurrentBinnedData)
CurrentWeb[CurrentWeb>0]=1
CurrentWebs[[as.character(CurrentTime)]] = CurrentWeb
nSp = length(unique(c(colnames(CurrentWeb),rownames(CurrentWeb))))
nLi = sum(CurrentWeb)
TemporalDynamics = rbind(TemporalDynamics,c(getParFromId(CurrentFile),t=CurrentTime,sp=nSp,li=nLi,co=nLi/(nSp^2)))
}
if(getParFromId(CurrentFile)['niche']==0){
NeutralMetaWebs[[length(NeutralMetaWebs)+1]] = aggregate.metaweb(CurrentWebs)$web
} else {
TraitsMetaWebs[[length(TraitsMetaWebs)+1]] = aggregate.metaweb(CurrentWebs)$web
}
# Get the temporal beta-diversity
cat(paste('\tRunning the beta-div analysis\n',sep=''))
for(w1idx in c(1:(length(CurrentWebs)-1))){
w1 = CurrentWebs[[w1idx]]
w2 = CurrentWebs[[w1idx+1]]
B = unlist(betalink(w1, w2))
TemporalBeta = rbind(TemporalBeta,c(getParFromId(CurrentFile),t=as.numeric(names(CurrentWebs)[w1idx+1])-TIMEBIN/2,B))
}
}
Conn = function(x) sum(x)/length(unique(c(rownames(x),colnames(x))))^2
BLT = betalink.dist(TraitsMetaWebs)
BLN = betalink.dist(NeutralMetaWebs)
pdf(file='betaPOP.pdf',width=12,height=12)
par(mfrow=c(2,2),pch=20,xaxs='i',yaxs='i')
boxplot(BLT[c('WN','OS','contrib')],ylim=c(0,1),main='Trait-based',lty=1)
boxplot(BLN[c('WN','OS','contrib')],ylim=c(0,1),main='Neutral',lty=1)
hist(beta.os_prime(TraitsMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb')
box()
hist(beta.os_prime(NeutralMetaWebs),xlim=c(0,1),ylim=c(0,40),main='',xlab='Dissimilarity with the metaweb')
box()
dev.off()
